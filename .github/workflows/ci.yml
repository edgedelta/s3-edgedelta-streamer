name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.x, 1.22.x, 1.23.x]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage to Codecov
      if: matrix.go-version == '1.23.x'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Build
      run: go build -v ./...

    - name: Build binaries
      run: |
        GOOS=linux GOARCH=amd64 go build -o bin/s3-edgedelta-streamer-linux-amd64 ./cmd/streamer/main_http.go
        GOOS=darwin GOARCH=amd64 go build -o bin/s3-edgedelta-streamer-darwin-amd64 ./cmd/streamer/main_http.go
        GOOS=darwin GOARCH=arm64 go build -o bin/s3-edgedelta-streamer-darwin-arm64 ./cmd/streamer/main_http.go

    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: bin/

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m